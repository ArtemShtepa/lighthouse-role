---
- name: Install epel-release for centos7
  become: true
  ansible.builtin.yum:
    name: "epel-release"
    state: present
  when:
    - ansible_facts['distribution'] == "CentOS"
    - ansible_facts['distribution_major_version'] == "7"
- name: Change repo for centos8
  become: true
  ansible.builtin.command: sed -i -e "s|mirrorlist=|#mirrorlist=|g" /etc/yum.repos.d/CentOS-*
  changed_when: false
  when:
    - ansible_facts['distribution'] == "CentOS"
    - ansible_facts['distribution_major_version'] == "8"
- name: Change repo for centos8
  become: true
  ansible.builtin.command: sed -i -e "s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g" /etc/yum.repos.d/CentOS-*
  changed_when: false
  when:
    - ansible_facts['distribution'] == "CentOS"
    - ansible_facts['distribution_major_version'] == "8"
- name: Install NGinX and Git
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "nginx"
    - "git"
- name: Check lighthouse files
  ansible.builtin.file:
    path: "{{ lighthouse_path }}/app.js"
    state: file
  register: lh_exists
  ignore_errors: true
- name: Clone VK Lighthouse
  become: true
  ansible.builtin.git:
    repo: "{{ lighthouse_repo }}"
    dest: "{{ lighthouse_path }}"
    version: "{{ lighthouse_branch }}"
    force: false
  when: lh_exists.state == "absent"
- name: Change lighthouse default host
  become: true
  ansible.builtin.replace:
    path: "{{ lighthouse_path }}/app.js"
    regexp: '127\.0\.0\.1:8123\/'
    replace: "{{ clickhouse_host }}:{{ clickhouse_port }}/?user={{ clickhouse_user }}&password={{ clickhouse_password }}"
- name: Restore lighthouse default host
  become: true
  ansible.builtin.replace:
    path: "{{ lighthouse_path }}/app.js"
    regexp: "{{ clickhouse_host }}:{{ clickhouse_port }}/?user={{ clickhouse_user }}&password={{ clickhouse_password }}"
    replace: '127\.0\.0\.1:8123\/'
  when: lh_exists.state == "file"
  tags:
    - never
- name: Configure NGinX
  become: true
  ansible.builtin.replace:
    path: "/etc/nginx/nginx.conf"
    regexp: '/usr/share/nginx/html'
    replace: "{{ lighthouse_path }}"
  # ansible.builtin.template:
  #   src: lighthouse.conf.j2
  #   dest: "{{ vector_config }}"
  #   dest: '/etc/nginx/conf.d/lighthouse.conf'
  #   owner: "nginx"
  notify: Restart nginx
- name: Restore NGinX configuration
  become: true
  ansible.builtin.replace:
    path: "/etc/nginx/nginx.conf"
    regexp: "{{ lighthouse_path }}"
    replace: '/usr/share/nginx/html'
  tags:
    - never
- name: Enable NGinX autostart
  become: true
  ansible.builtin.service:
    name: "nginx"
    enabled: true
    state: started
...
